---
- summary: |
    Проверка создания игры без регистрации
  requirement: |
    При нажатии кнопки "TRY SIMPLE BATTLE" открывается интерфейс с задачей против бота
  prerequisites: |
    Пользователь не зарегестирован
  test-data: |
    no test-data
  steps:
    - Нажать кнопку "TRY SIMPLE BATTLE"
  expected-result: |
    Игра без регистрации успешно создана

- summary: |
    Проверка успешной регистрации c email
  requirement: |
    При корректном заполнении формы регистрации происходит вход в систему
  prerequisites: |
    Пользователь не зарегестирован
  test-data: |
    - email - Daryaistest@tutamail.ocm
    - пароль - 110VptA63d
  steps:
    - Нажать кнопку "Sign up"
    - Ввести Nickname
    - Ввести email
    - Ввести пароль
    - Ввести пароль повторно
    - Нажать кнопку "Submit"
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка успешной регистрации с  Discord
  requirement: |
    При вводе правильного логина и пароля аккаунта Discord происходит вход в систему
  prerequisites: |
    - Пользователь должен иметь аккаунт Discord
    - Пользователь авторизирован в Discord
  test-data: |
    no test-data
  steps:
    - Нажать кнопку "Sign up"
    - Нажать кнопку "Sign in with Discord"
    - Нажать кнопку "Authorize"
  expected-result: |
    Пользователь успешно авторизован c Discord

- summary: |
    Проверка успешной авторизации с GitHub
  requirement: |
    При вводе правильного логина и пароля аккаунта GitHub происходит вход в систему
  prerequisites: |
    - Пользователь должен иметь аккаунт GitHub
    - Пользователь авторизирован в  GitHub
  test-data: |
    no test-data
  steps:
    - Нажать кнопку "Sign up"
    - Нажать кнопку "Sign in with Github"
    - Нажать кнопку "Sign in"
  expected-result: |
    Пользователь успешно авторизован с GitHub

- summary: |
    Проверка успешной авторизации
  requirement: |
    При вводе правильного email и пароля происходит вход в систему
  prerequisites: |
    Пользователь ранее зарегестрирован, но не авторизован 
  test-data: |
    - email - Daryaistest@tutamail.ocm
    - пароль - 110VptA63d
  steps:
    - Нажать кнопку "Sign in"
    - Ввести email
    - Ввести пароль
    - Нажать кнопку "Submit"
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка регистрации с невалидным nickname
  requirement: |
    При вводе невалидных символов в nickname регистрация невозможна и появляется сообщение 
  prerequisites: |
    Пользователь не авторизован
  test-data: |
    - nickname - Дарья
    - email - Daryaistest@tutamail.ocm
    - пароль - 110VptA63d
  steps:
    - Нажать кнопку "Sign up"
    - Ввести nickname
    - Ввести email
    - Ввести пароль
    - Нажать кнопку "Submit"
  expected-result: |
    Появляется сообщение об ошибке

- summary: |
    Проверка регистрации с невалидным email
  requirement: |
    При вводе неправильного email регистрация невозможна и появляется сообщение 
  prerequisites: |
    Пользователь не авторизован
  test-data: |
    - nickname - darya
    - email - notexistemail.com
    - пароль - 110VptA63d
  steps:
    - Нажать кнопку "Sign up"
    - Ввести nickname
    - Ввести email
    - Ввести пароль
    - Нажать кнопку "Submit"
  expected-result: |
    Появляется сообщение об ошибке       

- summary: |
    Проверка создания игры с ботом
  requirement: |
    При нажатии кнопки "Create a game" и выборе бота в качестве соперника должна открыться игра
  prerequisites: |
    Пользователь авторизован
  test-data: |
    no test-data
  steps:
    - Нажать кнопку "Create a game"
    - В открывшемся окне выбрать желаемый уровень сложности
    - Тип игры выбрать "With a bot"
    - Время установить любое
    - Задачу выбрать любую
    - Нажать кнопку «Create battle»
  expected-result: |
    Игра с ботом успешно создана

- summary: |
    Проверка создания открытой игры 
  requirement: |
    При нажатии на кнопку "Create a game" и выбора "With other user", любой режим игры и начать играть
  prerequisites: |
    Пользователь авторизован
  test-data: |
    no test-data
  steps:
    - Нажать кнопку "Create a game"
    - В открывшемся окне выбрать любой уровень сложности
    - Тип игры выбрать "With other user"
    - Время установить любое
    - Задачу выбрать любую
    - Нажать кнопку «Create battle»
  expected-result: |
    Игра создана и отображается в списке лобби

- summary: |
    Проверка возможности просматривать турнирную таблицу
  requirement: |
    Пользователь должен иметь возможность просматривать турнирную таблицу
  prerequisites:
    Пользователь авторизован
  test-data: |
    no test-data
  steps:
    - На главной странице нажать "Tournaments"
    - Нажать "Tournaments Info"
  expected-result: |
    Турнирная таблица корректно отображается 

- summary: |
    Проверка возможности просматривать историю игр
  requirement: |
    Пользователь должен иметь возможность просматривать историю игр
  prerequisites:
    Пользователь авторизован
  test-data: |
    no test-data
  steps:
    - На главной странице нажать "History"
  expected-result: |
    История игр корректно отображается

- summary: |
    Проверка корректной работы таблицы лидеров
  requirement: |
    В таблице лидеров должны работать вкладки, список игроков должен быть отсортирован от большего рейтинга к меньшему
  prerequisites:
    Пользователь авторизован; В Leaderboard открыта вкладка week
  test-data: |
    no test-data
  steps:
    - на главной странице обратить внимание на leaderboard
    - Переключится на вкладку month
    - Переключится  на вкладку all
  expected-result: |
    Таблица лидеров отображается корректно 

- summary: |
    Проверка просмотра полной таблицы лидеров
  requirement: |
    При нажатии кнопки "Top list" открывается полная таблица лидеров
  prerequisites: |
    Пользователь авторизован
  test-data: |
    no test-data
  steps:
    - нажать кнопку "Top list"
  expected-result: |
    Открылась полная таблица лидеров

- summary: |
    Проверка создания игры с другом
  requirement: |
    При нажатии на кнопку "Create a game" можно выбрать "With a friend" и пригласить друга
  prerequisites: |
    - Пользоватеь авторизован
    - Второй пользователь авторизован
  test-data: |
    - аккаунт Github
    - второй аккаунт email - daryaistest@tutamail.com пароль - Qwerty1002
  steps:
    - Нажать кнопку "Create a game"
    - В открывшемся окне выбрать желаемый уровень сложности
    - Тип игры выбрать "With a friend"
    - Время установить любое
    - Выбрать противника - daryatest
    - Задачу выбрать любую
    - Нажать кнопку «Create invite»
    - Второй пользователь нажимает кнопку "Accept"
  expected-result: |
    Игра с другом успешно создана

- summary: |
    Проверка создания нового турнира
  requirement: |
    После заполениии формы "Create a new tournament" и нажатии на кнопку "Create" создается турнир
  prerequisites: |
    - Пользавотель авторизован 
    - https://codebattle.hexlet.io/tournaments
  test-data: |
    - Name - My testy tournament
    - Description - Markdown description for testing
    - Event - 1
    - остальные поля - по умолчанию
  steps:
    - Заполнить форму "Create a new tournament"
    - Нажать кнопку "Create"
  expected-result: |
    Создался новый турнир и появился в таблице турниров 

- summary: |
    Присоединение к созданной игре
  requirement: |
    Пользователь должен иметь возможность подключиться к игре
  prerequisites: |
    Пользователь авторизован
    В списке есть доступные для подключения игры
  test-data: |
    no data
  steps:
    - Выбрать любую игру
    - Нажать на кнопку Fight
  expected-result: |
    Пользователь должен подключиться к игре

- summary: |
    Отправка сообщений в чат
  requirement: |
    Пользователь должен иметь возможность писать в чат 
  prerequisites: |
    Пользователь авторизован 
  test-data: |
    no data
  steps:
    - Ввести любые слова в поле Be nice at chat!
    - Нажать на кнопку Send
  expected-result: |
    Сообщение отправлено в чат 

- summary: |
    Отправка сообщений в личный чат 
  requirement: |
    Пользователь должен иметь отправлять сообщения лично другому пользователю 
  prerequisites: |
    Пользователь авторизован 
  test-data: |
    no data
  steps:
    - Выбрать любого пользователя из списка Online players
    - Нажать на кнопку Direct message
    - Ввести любое сообщение в поле Be nice at chat!
    - Нажать на кнопку Send
  expected-result: |
    Отправляется личное сообщение пользователю

- summary: |
    Проверка возможности сдаться
  requirement: |
    Пользователь должен иметь возможность сдаться сопернику в баттле
  prerequisites:
    Игра запущена
  test-data: |
    No data
  steps:
    - В окне редактора нажать на кнопку с флагом
    - Во всплывающем окне нажать на кнопку Give up
  expected-result: |
    Отображается всплывающее окно с анимацией и звуком

- summary: |
    Проверка отправки сообщений в игровом чате
  requirement: |
    Пользователь должен иметь возможность отправлять сообщения для соперника в игровом чате
  prerequisites:
    Игра запущена
  test-data: |
    No data
  steps:
    - Ввести любой текст в окно чата
    - Нажать кнопку Send
  expected-result: |
    Сообщение отправлено и отображается в игровом чате 

- summary: |
    Проверка возможности смены языка в баттле
  requirement: |
    Пользователь должен иметь возможность менять язык в редакторе баттла
  prerequisites:
    Игра запущена
  test-data: |
    No data
  steps:
    - В окне редактора нажать на выпадающий список языков
    - Выбрать любой язык
  expected-result: |
    Язык в редакторе меняется на выбранный

- summary: |
    Проверка возможности сброса кода в окне редактора
  requirement: |
    Пользователь должен иметь возможность сбрасывать код
  prerequisites:
    Игра запущена
    Набран код в редакторе
  test-data: |
    No data
  steps:
    - Нажать кнопку "Reset editor"   
  expected-result: |
     Код успешно сбросился 

- summary: |
    Проверка возможности выйграть
  requirement: |
    Игра должна завершаться победой с сообщением и звуковым оформлением
  prerequisites: |
    Игра запущена с ботом с задачей 1 сложности "Rect area" 
    Выбран язык кода NodeJS
  test-data: |
    const _ = require("lodash");
    const R = require("rambda");
    
    const solution = (width, length) => {
    return width * length;
    };
    
    module.exports = solution;
  steps:
    - Перенести в редакторкода решение задачи из test-data 
    - Нажать на кнопку проверки Run
  expected-result: |
    Игра завершается победой, появляется сообщение, анимация и звуковое сопровождение

